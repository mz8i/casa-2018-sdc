library(GGally)
library(ggplot2)#library("ggplot2", lib.loc="~/R/win-library/3.4")
library(reshape)
#library(devtools)
#install_github("ggbiplot", "vqv")
library(ggbiplot)
library(ggfortify)
library(factoextra)
dir<-'C:/Users/Nico/Documents/GitHub/casa-2018-sdc/analysis/data/'
data<-read.csv("Data_beats.csv",header=TRUE,sep=";")
getwd()
data<-read.csv("data/Data_beats.csv",header=TRUE,sep=";")
View(data)
#Reading data
data<-read.csv("data/Data_beats.csv",header=TRUE,sep=",")
View(data)
rownames(data)
rownames(data)<-data$Beat
rownames(data)
View(data)
View(data)
data=data[,2:length(data[1,])]
rm dir
rm(dir)
#Perform PCA
data.pca<-prcomp(data[,2:ncol(data)],center=TRUE,scale. = TRUE)
View(data)
data[is.na(data)]<-0
#Perform PCA
data.pca<-prcomp(data[,2:ncol(data)],center=TRUE,scale. = TRUE)
#Loadings(Rotation) for each variable.
#From these we can check which original variables influence the most in each PC(principal component)
#Usually, we are interested in PC1 and PC2
#5 most positive and 5 most negatives for each PC
print(data.pca)
#Plot of variances associated with each PC
plot(data.pca,type="l")
#Importance of components (how much variance is explained by each component)
summary(data.pca)
#Biplot ()
g4 <- ggbiplot(data.pca, obs.scale = 1, var.scale = 1, ellipse = TRUE,
circle = FALSE,varname.size = 4)+
scale_color_discrete(name = '')+
theme(legend.direction = 'horizontal',
legend.position = 'top')+
xlim(-5.5,10)+ylim(-4.5,4)+
labs(title="Biplot of variables and observations")+
theme(plot.title = element_text(hjust = 0.5)) #Center title
library(ggbiplot)
#Biplot ()
g4 <- ggbiplot(data.pca, obs.scale = 1, var.scale = 1, ellipse = TRUE,
circle = FALSE,varname.size = 4)+
scale_color_discrete(name = '')+
theme(legend.direction = 'horizontal',
legend.position = 'top')+
xlim(-5.5,10)+ylim(-4.5,4)+
labs(title="Biplot of variables and observations")+
theme(plot.title = element_text(hjust = 0.5)) #Center title
library(ggbiplot)
#Biplot ()
g4 <- ggbiplot(data.pca, obs.scale = 1, var.scale = 1, ellipse = TRUE,
circle = FALSE,varname.size = 4)+
scale_color_discrete(name = '')+
theme(legend.direction = 'horizontal',
legend.position = 'top')+
xlim(-5.5,10)+ylim(-4.5,4)+
labs(title="Biplot of variables and observations")+
theme(plot.title = element_text(hjust = 0.5)) #Center title
detach(ggbiplot)
detach('ggbiplot')
detach("package:ggbiplot", unload=TRUE)
library(ggbiplot)
#Biplot ()
g4 <- ggbiplot(data.pca, obs.scale = 1, var.scale = 1, ellipse = TRUE,
circle = FALSE,varname.size = 4)+
scale_color_discrete(name = '')+
theme(legend.direction = 'horizontal',
legend.position = 'top')+
xlim(-5.5,10)+ylim(-4.5,4)+
labs(title="Biplot of variables and observations")+
theme(plot.title = element_text(hjust = 0.5)) #Center title
print(g4)
View(data)
#Perform PCA
data.pca<-prcomp(data,center=TRUE,scale. = TRUE)
#Loadings(Rotation) for each variable.
#From these we can check which original variables influence the most in each PC(principal component)
#Usually, we are interested in PC1 and PC2
#5 most positive and 5 most negatives for each PC
print(data.pca)
#Plot of variances associated with each PC
plot(data.pca,type="l")
#Importance of components (how much variance is explained by each component)
summary(data.pca)
#Biplot ()
g4 <- ggbiplot(data.pca, obs.scale = 1, var.scale = 1, ellipse = TRUE,
circle = FALSE,varname.size = 4)+
scale_color_discrete(name = '')+
theme(legend.direction = 'horizontal',
legend.position = 'top')+
xlim(-5.5,10)+ylim(-4.5,4)+
labs(title="Biplot of variables and observations")+
theme(plot.title = element_text(hjust = 0.5)) #Center title
print(g4)
#Biplot ()
g4 <- ggbiplot(data.pca, obs.scale = 1, var.scale = 1, ellipse = TRUE,
circle = FALSE,varname.size = 4)+
scale_color_discrete(name = '')+
theme(legend.direction = 'horizontal',
legend.position = 'top')+
#xlim(-5.5,10)+ylim(-4.5,4)+
labs(title="Biplot of variables and observations")+
theme(plot.title = element_text(hjust = 0.5)) #Center title
print(g4)
View(data)
#Saving observations projected into PC1 and PC2
proj_data<-data.pca$x[,1:2]
rownames(proj_data)<-rownames(data)
View(proj_data)
#Determining The Optimal Number Of Clusters
#Elbow, Silhouhette and Gap statistic methods
# Elbow method
fviz_nbclust(proj_data, kmeans, method = "wss") +
geom_vline(xintercept = 3, linetype = 2)+
labs(subtitle = "Elbow method")
# Silhouette method
fviz_nbclust(proj_data, kmeans, method = "silhouette")+
labs(subtitle = "Silhouette method")
# Gap statistic
# nboot = 50 to keep the function speedy.
# recommended value: nboot= 500 for your analysis.
# Use verbose = FALSE to hide computing progression.
set.seed(123)
fviz_nbclust(proj_data, kmeans, nstart = 25,  method = "gap_stat", nboot = 50)+
labs(subtitle = "Gap statistic method")
set.seed(1)
autoplot(kmeans(proj_data, centers=7,iter.max=100), data = proj_data,label=TRUE)+
labs(title="Observations factor map colored by cluster \n( kmeans, k = 7 )")+
theme(plot.title = element_text(hjust = 0.5))#+ #Center title
print(g4)
install.packages("rgl")
library(rgal)
library(rgl)
View(data.pca)
View(data.pca)
#Loadings(Rotation) for each variable.
#From these we can check which original variables influence the most in each PC(principal component)
#Usually, we are interested in PC1 and PC2
#5 most positive and 5 most negatives for each PC
print(data.pca)
plot3d(data.pca$x[,1:3])
plot3d(data.pca$x[,1:3])
View(data.pca)
View(data.pca)
data.pca[["rotation"]]
plot3d(data.pca$x[,1:3])
text3d(data.pca$x[,1:3],texts=rownames(data.pca))
plot3d(data.pca$x[,1:3])
text3d(data.pca$x[,1:3],texts=rownames(data.pca))
text3d(pc$rotation[,1:3], texts=rownames(pc$rotation), col="red")
coords <- NULL
plot3d(data.pca$x[,1:3])
text3d(data.pca$x[,1:3],texts=rownames(data.pca))
text3d(data.pca$rotation[,1:3], texts=rownames(data.pca$rotation), col="red")
coords <- NULL
for (i in 1:nrow(data.pca$rotation)) {
coords <- rbind(coords, rbind(c(0,0,0),data.pca$rotation[i,1:3]))
}
lines3d(coords, col="red", lwd=4)
plot3d(data.pca$x[,1:3])
text3d(data.pca$x[,1:3],texts=rownames(data.pca))
text3d(data.pca$rotation[,1:3], texts=rownames(data.pca$rotation), col="red")
coords <- NULL
for (i in 1:nrow(data.pca$rotation)) {
coords <- rbind(coords, rbind(c(0,0,0),data.pca$rotation[i,1:3]))
}
lines3d(coords, col="red", lwd=4)
View(data.pca)
View(proj_data)
9.2647849/5434
6.585405468/5434
0.066996154 -0.3049275198
0.066996154/5434
0.066996154*5434
-0.3049275198/5434
autoplot(data.pca)
#Plotting only variables
g3 <- ggbiplot(data.pca, obs.scale = 1, var.scale = 1, alpha=0,
circle = TRUE, varname.size = 4)+
theme(legend.direction = 'horizontal',
legend.position = 'top')+
# xlim(-5,5)+
labs(title="Variables factor map")+
theme(plot.title = element_text(hjust = 0.5)) #Center title
print(g3)
text3d(data.pca$rotation[,1:3], texts=rownames(data.pca$rotation), col="red")
coords <- NULL
for (i in 1:nrow(data.pca$rotation)) {
coords <- rbind(coords, rbind(c(0,0,0),data.pca$rotation[i,1:3]))
}
lines3d(coords, col="red", lwd=4)
text3d(data.pca$rotation[,1:3], texts=rownames(data.pca$rotation), col="red")
coords <- NULL
for (i in 1:nrow(data.pca$rotation)) {
coords <- rbind(coords, rbind(c(0,0,0),data.pca$rotation[i,1:3]))
}
lines3d(coords, col="red", lwd=4)
plot3d(data.pca$rotation[,1:3])
text3d(data.pca$rotation[,1:3], texts=rownames(data.pca$rotation), col="red")
coords <- NULL
for (i in 1:nrow(data.pca$rotation)) {
coords <- rbind(coords, rbind(c(0,0,0),data.pca$rotation[i,1:3]))
}
lines3d(coords, col="red", lwd=4)
autoplot(kmeans(proj_data, centers=2,iter.max=100), data = proj_data,label=TRUE)+
labs(title="Observations factor map colored by cluster \n( kmeans, k = 7 )")+
theme(plot.title = element_text(hjust = 0.5))#+ #Center title
plot3d(data.pca$x[,1:3])
text3d(data.pca$x[,1:3],texts=rownames(data.pca))
#plot3d(data.pca$rotation[,1:3])
text3d(data.pca$rotation[,1:3], texts=rownames(data.pca$rotation), col="red")
coords <- NULL
for (i in 1:nrow(data.pca$rotation)) {
coords <- rbind(coords, rbind(c(0,0,0),data.pca$rotation[i,1:3]))
}
lines3d(coords, col="red", lwd=4)
plot3d(data.pca$rotation[,1:3])
text3d(data.pca$rotation[,1:3], texts=rownames(data.pca$rotation), col="red")
coords <- NULL
for (i in 1:nrow(data.pca$rotation)) {
coords <- rbind(coords, rbind(c(0,0,0),data.pca$rotation[i,1:3]))
}
lines3d(coords, col="red", lwd=4)
#Saving observations projected into PC1 and PC2
proj_data<-data.pca$x[,1:3]
#Determining The Optimal Number Of Clusters
#Elbow, Silhouhette and Gap statistic methods
# Elbow method
fviz_nbclust(proj_data, kmeans, method = "wss") +
#geom_vline(xintercept = 3, linetype = 2)+
labs(subtitle = "Elbow method")
# Silhouette method
fviz_nbclust(proj_data, kmeans, method = "silhouette")+
labs(subtitle = "Silhouette method")
# Gap statistic
# nboot = 50 to keep the function speedy.
# recommended value: nboot= 500 for your analysis.
# Use verbose = FALSE to hide computing progression.
set.seed(123)
fviz_nbclust(proj_data, kmeans, nstart = 25,  method = "gap_stat", nboot = 50)+
labs(subtitle = "Gap statistic method")
autoplot(kmeans(proj_data, centers=4,iter.max=100), data = proj_data,label=TRUE)+
labs(title="Observations factor map colored by cluster \n( kmeans, k = 7 )")+
theme(plot.title = element_text(hjust = 0.5))#+ #Center title
cluster3d_4=kmeans(proj_data, centers=4,iter.max=100)
View(cluster3d_4)
View(cluster3d_4)
cluster3d_4=cluster3d_4$cluster
plot3d(data.pca$x[,1:3],col=cluster3d_4)
text3d(data.pca$x[,1:3],texts=rownames(data.pca))
plot3d(data.pca$x[,1:3],col=cluster3d_4)
text3d(data.pca$x[,1:3],texts=rownames(data.pca))
plot3d(data.pca$x[,1:3],col=cluster3d_4)
text3d(data.pca$x[,1:3],texts=rownames(data.pca))
plot3d(data.pca$x[,1:3],col=cluster3d_4)
text3d(data.pca$x[,1:3],texts=as.string(rownames(data.pca)))
plot3d(data.pca$x[,1:3],col=cluster3d_4)
text3d(data.pca$x[,1:3],texts=toString(rownames(data.pca)))
install.packages("dbscan")
#DBSCAN clustering
library(dbscan)
kNNdistplot(proj_data, k = 4)
abline(h=.5, col = "red", lty=2)
data(iris)
iris <- as.matrix(iris[,1:4])
## find suitable eps parameter using a k-NN plot for k = dim + 1
## Look for the knee!
kNNdistplot(iris, k = 5)
abline(h=.5, col = "red", lty=2)
kNNdistplot(proj_data, k = 4)
abline(h=2.5, col = "red", lty=2)
abline(h=2, col = "red", lty=2)
abline(h=1.5, col = "red", lty=2)
res <- dbscan(proj_data, eps = 1.5, minPts = 5)
View(res)
clusters_dbscan <- dbscan(proj_data, eps = 1.5, minPts = 5)
View(clusters_dbscan)
pairs(proj_data,col=clusters_dbscan$cluster+1L)
